<div class="info text-start mt-5 lh-lg">
  <h2 class="fs-4 mb-4">How does it work?</h2>
  <p>
    This API acts as a <strong><i>caching server</i></strong> that caches the
    data fetched from the <strong><i>origin server</i></strong
    >. You're just needed to submit an API endpoint
    <strong>that retuns JSON data</strong>, for which this API provides a unique
    endpoint with the <em>paginated version</em> of the same JSON data.
  </p>

  <p>
    The following constraints apply to the data returned by the paginated API-
  </p>

  <ul class="ps-3 lh-lg">
    <li>
      If no query was passed in the URL, all of the data shall be returned.
    </li>
    <li>The only valid parameters are:</li>
    <ol>
      <li>
        <strong class="badge font-monospace">page</strong> : <wbr />The page/set
        number of the resulting data.
      </li>
      <li>
        <strong class="badge font-monospace">limit</strong> : <wbr />The number
        of results per page/set.
      </li>
      <em class="fw-bold">OR</em>
      <li class="list-unstyled">
        <strong class="badge font-monospace">number_of_pages</strong> :
        <wbr />The total number of pages/sets in the resulting data.
      </li>
    </ol>

    <li>
      Only positive integer values are allowed for each of the parameters. If
      not, the query shall be rejected.
    </li>
    <li>
      In case <strong class="badge font-monospace">limit</strong> and
      <strong class="badge font-monospace">number_of_pages</strong> both are
      defined, <strong class="badge font-monospace">limit</strong> will be used
      for paginating the data.
    </li>
    <li>
      If the parameters' values conflict with each other, all of the data shall
      be returned to the client.
    </li>
  </ul>

  <p>The JSON response will look like-</p>

<pre><code>
{
	"status": 200,
	"message": "OK",
	"dataLength": 50, // length of the data returned
	"data": []
}</code></pre>

</div>
